% This file compute Neural Flexibility for the file *bestS* 
% which is generated by the script "rann_subject1_GLouvain.m" for community detection

% path depends on where the bestS file is saved
cd /ifs/scratch/msph/LeeLab/wq2151/dycon/RANN_nf/

subjmatFolders=struct2cell(dir('*bestS.mat'));
subjmatID=subjmatFolders(1,:);

% row: number of subjects | columns: id+scanLength+268nodes=270
nf_subj1=cell(1, 270);

% index first subject
i=1;
% extract subject ID
tmp=subjmatID{1,i};
suffix='_bestS.mat';
tmp_id=strrep(tmp,suffix,'');
nf_subj1(i,1)={tmp_id};

% load bestS matrix; size of 268 * timepoints
loader=['/ifs/scratch/msph/LeeLab/wq2151/dycon/RANN_nf/results/' tmp];
bestS_in=load(loader);
bestS=bestS_in.bestS_var;

% Compute neural flexibility

%% subtract the node assignment number with previous timepoint
bestS_transpose=transpose(bestS);
diff_bestS_transpose=diff(bestS_transpose);
diff_bestS=transpose(diff_bestS_transpose);

[n_nodes, n_cols]=size(diff_bestS);
tpoints=n_cols+30;
%% add information about timepoints/Scan Length
nf_subj1(i,2)={tpoints};

%% NF is defined as the number of times that a node changed its community assignment across the sliding windows, normalized by the total number of possible changes

%% every non-zero result means one changed community assignment
for node_i=1:268
    node_ts=diff_bestS(node_i,:);
    nonzeros_bynodes=nnz(node_ts);
    nonzeros_bynodes_perc=nonzeros_bynodes/n_cols;
    nf_subj1(i,node_i+2)={nonzeros_bynodes_perc};
end
   
% save as csv file. For one subject, the dimension should be 1*270   
writecell(nf_subj1, 'rann_subject1_nf.csv')        
    
    
    
    